name: flight-reader

services:
  postgres:
    image: postgis/postgis:16-3.4
    restart: unless-stopped
    init: true
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-flight_reader}
      POSTGRES_USER: ${POSTGRES_USER:-flight_reader}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-flight_reader_password}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U ${POSTGRES_USER:-flight_reader} -d ${POSTGRES_DB:-flight_reader}
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - internal

  regions-import:
    image: osgeo/gdal:ubuntu-full-3.6.3
    restart: "no"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-flight_reader}
      POSTGRES_USER: ${POSTGRES_USER:-flight_reader}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-flight_reader_password}
      REGIONS_SOURCE_URL: ${REGIONS_SOURCE_URL:-https://osm-boundaries.com/api/v1/download?db=osm20250707&osmIds=-60189&recursive=true&minAdminLevel=4&maxAdminLevel=4&boundary=administrative&format=GeoJSON&srid=4326}
      OSMB_API_KEY: ${OSMB_API_KEY:-}
    volumes:
      - ./scripts:/scripts:ro
      - ./data:/data:rw
    # Устанавливаем psql клиент и запускаем импорт
    command: bash -lc "apt-get update -qq && apt-get install -y -qq postgresql-client >/dev/null && /scripts/import_regions.sh"
    networks:
      - internal

volumes:
  postgres_data:
    driver: local

networks:
  internal:
    driver: bridge
